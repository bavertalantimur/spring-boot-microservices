eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=notification-service
server.port=0

management.tracing.enabled=true

# Zipkin yap?land?rmas?
management.zipkin.tracing.endpoint=http://localhost:9411

# Tüm isteklerin izlenmesini sa?lamak için %100 olas?l?k
management.tracing.sampling.probability=1.0


# Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
# Kafka broker'?n?n adresini belirtir. 'localhost:9092' ifadesi, Kafka'n?n yerel makinede (localhost) 9092 portu üzerinden çal??t???n? gösterir.

spring.kafka.template.default-topic=notificationTopic
# Varsay?lan olarak kullan?lacak konu (topic) ad?n? belirtir. Mesajlar bu konuya gönderilecektir.

spring.kafka.consumer.group-id=notificationId
# Kafka consumer'lar?n?n ait oldu?u grup kimli?ini belirtir. Ayn? grup kimli?ine sahip olan consumer'lar, mesajlar? payla?arak yük dengelemesi yapar.

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer 
# Mesaj anahtarlar?n? (key) deserialize etmek için kullan?lacak s?n?f? belirtir. Burada, anahtarlar?n bir 'String' olarak deserialize edilece?i belirtilmi?tir.

spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Mesaj de?erlerini (value) deserialize etmek için kullan?lacak s?n?f? belirtir. JSON format?ndaki verileri Java nesnelerine dönü?türmek için kullan?l?r.

spring.kafka.consumer.properties.spring.json.type.mapping=event:com.talantimur.OrderPlacedEvent
# Mesaj?n hangi Java s?n?f?na kar??l?k geldi?ini belirtir. 'event' anahtar?na kar??l?k gelen mesajlar?n 'OrderPlacedEvent' s?n?f?na dönü?türülece?i ifade edilmi?tir.
